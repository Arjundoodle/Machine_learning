import numpy as np#%%#1D, 2D and 3D Arrayarr = np.array([1, 2, 3, 4, 5, 6, 7, 8, 9, 10])arr2 = np.array([[1, 2, 3], [4, 5, 6]])arr3 = np.array([[[1, 2, 3], [4, 5, 6]], [[1, 2, 3], [4, 5, 6]]])arrs=np.array(['apple', 'banana', 'cherry'])print(arr,arr2,arr3)#%%print(arr[2],arr2[0][1])#%%print(arr[1:5])print(arr[-3:-1])print(arr2[0:2, 2])#%%print(arr.dtype)print(arrs.dtype)#%%newarr = arr.astype('i')print(newarr.dtype)#%%x = arr.copy()print(x)print(x.base)#%%print(arr.shape)#%%arr = np.array([[1, 2, 3], [4, 5, 6]])newarr = arr.reshape(-1)print(newarr)#%%arr = np.array([1, 2, 3])for x in arr:  print(x)print("")  arr = np.array([[[1, 2, 3], [4, 5, 6]], [[7, 8, 9], [10, 11, 12]]])for x in arr:  for y in x:    for z in y:      print(z)#%%arr = np.array([1, 2, 3])for idx, x in np.ndenumerate(arr):  print(idx, x)  #%%arr1 = np.array([1, 2, 3])arr2 = np.array([4, 5, 6])arr = np.concatenate((arr1, arr2))print(arr)#%%arr = np.stack((arr1, arr2), axis=1)print(arr)#%%arr = np.array([1, 2, 3, 4, 5, 6])newarr = np.array_split(arr, 3)print(newarr)#%%arr = np.array([[1, 2, 3], [4, 5, 6], [7, 8, 9], [10, 11, 12], [13, 14, 15], [16, 17, 18]])newarr = np.array_split(arr, 3)print(newarr)#%%arr = np.array([1, 2, 3, 4, 5, 4, 4])x = np.where(arr == 4)print(x)#%%arr = np.array([6, 7, 8, 9])x = np.searchsorted(arr, 7)print(x)#%%arr = np.array(['banana', 'cherry', 'apple'])print(np.sort(arr))arr = np.array([[3, 2, 4], [5, 0, 1]])print(np.sort(arr))#%%arr = np.array([41, 42, 43, 44])x = [True, False, True, False]newarr = arr[x]print(newarr)#%%arr = np.array([41, 42, 43, 44])filter_arr = arr > 42newarr = arr[filter_arr]print(filter_arr)print(newarr)#%%